LinuxChiro
==========

Posture checking and correcting for Linux

What it checks/fixes:
 - Files/folders for permissions and/or ownership
 - Config files for correct option/value settings (separator can be specified)
   - Ex: "PermitEmptyPasswords no" in sshd_config or "net.ipv4.tcp_syncookies = 1" in /etc/sysctl.conf

Core functionality:
- Examination  - Audit things to be fixed, things already fixed or the status of all 
- Prescription - Produces a list of what commands that should be run to resolve issues
- Adjustment   - Fix issues interactively (locally) and non-interactively (locally/remotely) 
- Insurance    - Backs up things before making each change and creates a list of commands to run to easily undo changes

Other features:
- Runs agentless remotely via a ssh (it won't take arguments when run remotely but you can hard code the option) 
- Runs as non root and performs rudimentary check for required sudo privs (better checks coming in future version).
  - It will run as root locally but this produces a warning. 
- Checks for the availability of required commands before running. 
- Changes are made immediately active when possible and added to the appropriate files for the next service (ex sshd) restart 
- Descriptive/Custom exit codes
- Provides brief/simple reasons for making each change
- All contained in one bash script 

Current Limitations:
- It will not create files that don't exist but should (ex: /etc/cron.deny). It will only warn.
- It will not delete options or files that should not exist. (Ex Rhost Auth from pam files and Cron log watch spam "/etc/cron.daily/0logwatch")
  - This isn't a big deal because we can usually just set things to an appropriate value (ex null or 0) but some things need to be removed. 
- It can't deal with multiple occurrences of an option/values in a file (ex: two name servers in /etc/resolve.conf). It warns and acts on the value of the 2nd occurrence, which may cause issues.  
- It can't deal with min/max values. It only takes exact - ex PASS_MAX_DAYS in /etc/login.defs

Requirements:
- Runs on RHEL/Centos 5/6 (RHEL7 mostly works, the big difference between versions is the checks to perform)
- Sudo privs without password (This can be trimmed down) 
- /sbin in path (This can be trimmed down, the code will check for each needed commend but things like /sbin/service are needed)
- Bash GNU bash, version 3.2.25 or later

Major Feature additions in the works:
- Ability to optionally source checks from external config files.
- RPM Package checks
- Service checks 
- Ability to create and process a white list of changes that should not be made on a host 

Usage and Example:

[user@server ~]$ git clone https://github.com/johnculkin/LinuxChiro.git
Cloning into 'LinuxChiro'...
remote: Counting objects: 486, done.
remote: Compressing objects: 100% (96/96), done.
remote: Total 486 (delta 55), reused 0 (delta 0)
Receiving objects: 100% (486/486), 116.56 KiB, done.
Resolving deltas: 100% (317/317), done.
[user@server ~]$ cd LinuxChiro/
[user@server LinuxChiro]$ chmod +x checkup.sh
[user@server LinuxChiro]$

[user@server LinuxChiro]$ ./checkup.sh
You are running as a non-root user with the correct sudo privs.
OSVER is 5 - Supported
Usage: ./checkup.sh audit|audit-on|audit-off|fix-quiet|fix-notify|interactive

audit-all   - make no changes, notify status of all checks
audit-on    - make no changes, notify status of only implemented checks
audit-off   - make no changes, notify status of only non-implemented checks
fix-quiet   - make changes, no notifications
fix-notify  - make changes, with notifications of changes made
interactive - step through each check, give status of all and prompt to fix (if needed)

[user@server LinuxChiro]$


[user@server LinuxChiro]$ ./checkup.sh audit-off
You are running as a non-root user with the correct sudo privs.
OSVER is 5 - Supported

!!!Warning /etc/security/console.perms does not exist
!!!Warning /var/spool/cron/root does not exist
!!!Warning /root/.tcshrc does not exist
!!!Warning /root/.bashrc does not exist
!!!Warning /root/.cshrc does not exist
---Incorrect /var/log/wtmp is set to 664 should be 600
---Incorrect /var/log/rpmpkgs is set to 644 should be 640
---Incorrect /var/lib/nfs is set to 755 should be 750
---Incorrect /var/log/sa is set to 755 should be 600
!!!Warning /var/spool/cron/root does not exist
---Incorrect /etc/gshadow is set to 0 should be 0000
---Incorrect /etc/shadow is set to 0 should be 0000
!!!Warning /var/log/audit/audit.log does not exist
!!!Warning /var/spool/cron/root does not exist
---Incorrect /var/log/btmp is set to root:utmp should be root:root
---Incorrect /etc/pam.d/atd is set to root:daemon should be root:root
---Incorrect /var/log/wtmp is set to root:utmp should be root:root
!!!Warning /var/log/audit/audit.log does not exist
---Incorrect PASS_MIN_LEN in /etc/login.defs is set to 5, it should be 14
---Incorrect PASS_MIN_DAYS in /etc/login.defs is set to 0, it should be 1
---Incorrect PASS_MAX_DAYS in /etc/login.defs is set to 99999, it should be 60

[user@server LinuxChiro]$


[user@server LinuxChiro]$ ./checkup.sh fix-notify
You are running as a non-root user with the correct sudo privs.
OSVER is 5 - Supported

+++Changing  /var/log/wtmp to 600 to sec_logs
+++Changing  /var/log/rpmpkgs to 640 to sec_logs
+++Changing  /var/lib/nfs to 750 to secure_nfs_folder
+++Changing  /var/log/sa to 600 to secure_sar_files
+++Changing  /etc/gshadow to 0000 to secure_gshadow
+++Changing  /etc/shadow to 0000 to secure_shadow
+++Changing  /var/log/btmp to root:root to secure_logs
+++Changing  /etc/pam.d/atd to root:root to secure_pam_conf
+++Changing  /var/log/wtmp to root:root to secure_wtmp
+++Changing Changing existing entry - PASS_MIN_LEN 14 in /etc/login.defs
+++Changing Changing existing entry - PASS_MIN_DAYS 1 in /etc/login.defs
+++Changing Changing existing entry - PASS_MAX_DAYS 60 in /etc/login.defs

Based on the PRESCRIBECOMMANDSONLY variable, we will NOT run the following commands in /tmp/tmp.OwYMT15392/commandstorun.lis
#!/bin/bash
sudo chmod 600 /var/log/wtmp
sudo chmod 640 /var/log/rpmpkgs
sudo chmod 750 /var/lib/nfs
sudo chmod 600 /var/log/sa
sudo chmod 0000 /etc/gshadow
sudo chmod 0000 /etc/shadow
sudo chown root:root /var/log/btmp
sudo chown root:root /etc/pam.d/atd
sudo chown root:root /var/log/wtmp


Compressed the Prescribed commands to /tmp/tmp.OwYMT15392.tar.gz

Here are the commands to undo the changes if you made them:
#!/bin/bash
sudo chmod 664 /var/log/wtmp
sudo chmod 644 /var/log/rpmpkgs
sudo chmod 755 /var/lib/nfs
sudo chmod 755 /var/log/sa
sudo chmod 0 /etc/gshadow
sudo chmod 0 /etc/shadow
sudo chown root:utmp /var/log/btmp
sudo chown root:daemon /etc/pam.d/atd
sudo chown root:utmp /var/log/wtmp

Backups of files that were changed and commands to undo changes are available in /tmp/tmp.SnHUy15391.tar.gz

[user@server LinuxChiro]$


To Dos:

-- 0000 vs 0 file permissions for /etc/shadow (text vs integer?)

-- Code Cleanup:
  -- Get rid of all the exit code status checks in the if statements, put the greps right in the If block 
  -- Put all text echos through the function (even errors) 
  -- Put a catch all "else" in every if/case statement and custom error

--Feature add:
  -- Create white list of things that should not be changed on a host. Could this be easily tied to the remediation script? Just remove the lines from the remediation script that are in the white list file???
  -- Break out config of checks to separate files
  -- Package Checking - should we remove and install packages? Check for repos?
  
-- Testing Plan:
-- Create a file to test the script during development - it could just be a set of prescribe and undo scripts 
-- Things to check in demo script 
 - Check permision on file 
 - Check ownership on folder
 - Set Permision on file 
 - Change ownership on file 
 - Set Permision on folder  
 - Change ownership on folder 
 - Check value of option in file
 - Add option to config file 
 - Restarting of service
 - Setting of Active Value 
 - Service running that should be 
 - Servive running that should not be (and does exist) 
 - Servive running that should not be (and does not exist) 
 - Service not running that should not be running
 - Check on/off notification output
 - Undoing all of the above 
 - Interactive Changes 
 - Test on different versions of RedHat/Centos

-- Etc:
-- Create Files for CIS and NIST compliance 
-- SetUID/Stick bit checking?
-- Ability to set max and min for config options, Ex: --Incorrect PASS_MAX_DAYS in /etc/login.defs is set to 99999, it should be 60
-- Create a way to remove options from config files and remove files that should not exist - Ex Rhost Auth from pam files and Cron log watch spam "/etc/cron.daily/0logwatch"
-- Set old password limits by outting "remember=24" at the correct place in the correct line of /etc/pam.d/system-auth
-- Check the order of tests on a fresh install - ex config network before repo and packages, config packages before options and files perms/ownership - or just recommend to rerun script when making certain changes?
-- Allow for multiple occurrences of an option/values in a file (ex: two name servers in /etc/resolve.conf)
-- Plan for Apache Confs - do in same config loop? Ex ssl cipher strength and protocol (poodle) 
-- Add check for updates and repo - #"yum check-update/rhn_check" (probably with the package check)
-- Get it working with RHEL/Centos 7, give script the ability to check different things per OS version, maybe this is better handled with OS specific config files for the checks?
-- Allow command line changing of the backup and PRESCRIBECOMMANDSONLY options, currenlty they are hard coded. 
-- Improve the reasons given for each permisson, config and service check - they are pretty basic now
-- More elegant way to determine RedHat/Centos version
-- Lessen need on sudo as much as possible, generator a better description of exactly what sudo privs are needed
-- Improve the way that we check if the user running the script has the correct sudo privs, tirm white space etc
-- Check active sysctl values before we set then in /etc/sysctl.conf? Maybe they are the defaults and already in place. We will want to add the values to /etc/sysctl anyway but maybe we don't need to make the active change. Same with sshd and other services. Low priority 
-- Get arugments working via pipe (important for massh usage). Might be tough/impossible, may have to rename script and check $0

Notes on Service Checks and RPMs:
These require the need for a more advanced functionality because some times the correct setting is having something not exist. 
I should looking into creating a core function that would help with this because it seems to be very repetitious 

